import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import os

API_TOKEN = os.getenv("BOT_TOKEN")  # —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# --- –ú–µ–Ω—é –ø–∏—Ü—Ü ---
pizzas = {
    "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞": "195 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ü–∏—Ü—Ü–∞-—Å–æ—É—Å, –º–Ω–æ–≥–æ —Å—ã—Ä–∞ '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞', –æ—Ä–µ–≥–∞–Ω–æ",
    "–ì–∞–≤–∞–π—Å–∫–∞—è": "295 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ü–∏—Ü—Ü–∞-—Å–æ—É—Å, –∞–Ω–∞–Ω–∞—Å, –≤–µ—Ç—á–∏–Ω–∞, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–¶—ã–ø–ª—ë–Ω–æ–∫ –ë–∞—Ä–±–µ–∫—é": "295 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –°–æ—É—Å –±–∞—Ä–±–µ–∫—é, –∫—Ä–∞—Å–Ω—ã–π –ª—É–∫, —Ü—ã–ø–ª–µ–Ω–æ–∫, –±–µ–∫–æ–Ω, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–ì—Ä–∏–±–Ω–∞—è": "250 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ß–µ—Å–Ω–æ—á–Ω—ã–π —Å–æ—É—Å, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã, –≤–µ—Ç—á–∏–Ω–∞, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–°—ã—Ä–Ω–∞—è –∫—É—Ä–æ—á–∫–∞": "315 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –°—ã—Ä–Ω—ã–π —Å–æ—É—Å, –¶—ã–ø–ª–µ–Ω–æ–∫, –º–Ω–æ–≥–æ —Å—ã—Ä–∞ '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞', –∫—É–Ω–∂—É—Ç–Ω—ã–µ –±–æ—Ä—Ç–∏–∫–∏",
    "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏": "295 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ü–∏—Ü—Ü–∞-—Å–æ—É—Å, –∫–æ–ª–±–∞—Å–∫–∏ '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', –º–Ω–æ–≥–æ —Å—ã—Ä–∞ '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–§–∏—Ä–º–µ–Ω–Ω–∞—è Prosto": "295 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ü–∏—Ü—Ü–∞-—Å–æ—É—Å, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã, —Å–ª–∞–¥–∫–∏–π –ø–µ—Ä–µ—Ü, –∫—Ä–∞—Å–Ω—ã–π –ª—É–∫, –º–∞—Å–ª–∏–Ω—ã, —Ü—ã–ø–ª–µ–Ω–æ–∫, –∫–æ–ª–±–∞—Å–∫–∏ '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–î–≤–æ–π–Ω–∞—è –ü–µ–ø–ø–µ—Ä–æ–Ω–∏": "315 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ü–∏—Ü—Ü–∞-—Å–æ—É—Å, —Å—ã—Ä –ú–æ—Ü–∞—Ä–µ–ª–ª–∞, –∫–æ–ª–±–∞—Å–∫–∏ –ü–µ–ø–ø–µ—Ä–æ–Ω–∏",
    "–ö–∞–Ω—Ç—Ä–∏": "315 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –°–æ—É—Å –°—ã—Ä–Ω—ã–π, –≤–µ—Ç—á–∏–Ω–∞, –æ–º–ª–µ—Ç, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã, —Ç–æ–º–∞—Ç—ã, —Å—ã—Ä –ú–æ—Ü–∞—Ä–µ–ª–ª–∞, –±–µ–∫–æ–Ω",
    "–°—Ä–µ–¥–∏–∑–µ–º–Ω–∞—è": "335 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ü–∏—Ü—Ü–∞-—Å–æ—É—Å, —Ç–æ–º–∞—Ç—ã, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã, —Å–ª–∞–¥–∫–∏–π –ø–µ—Ä–µ—Ü, –∫—Ä–∞—Å–Ω—ã–π –ª—É–∫, –æ—Ä–µ–≥–∞–Ω–æ, —Å—ã—Ä '–§–µ—Ç–∞', –º–∞—Å–ª–∏–Ω—ã, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–ß–∏–∫–µ–Ω –†–∞–Ω—á": "315 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –°–æ—É—Å '–†–∞–Ω—á', —Ç–æ–º–∞—Ç—ã, —á–µ—Å–Ω–æ–∫, —Ü—ã–ø–ª–µ–Ω–æ–∫, –≤–µ—Ç—á–∏–Ω–∞, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞": "315 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ü–∏—Ü—Ü–∞-—Å–æ—É—Å, —Å—ã—Ä '–§–µ—Ç–∞', —Å–ª–∏–≤–æ—á–Ω—ã–π —Å—ã—Ä, –ü–∞—Ä–º–µ–∑–∞–Ω, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–ú—è—Å–Ω–∞—è": "315 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ü–∏—Ü—Ü–∞-—Å–æ—É—Å, –∫–æ–ª–±–∞—Å–∫–∏ '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏', –≥–æ–≤—è–¥–∏–Ω–∞, –≤–µ—Ç—á–∏–Ω–∞, –±–µ–∫–æ–Ω, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–ë—å—è–Ω–∫–∞": "335 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ß–µ—Å–Ω–æ—á–Ω—ã–π —Å–æ—É—Å, —à–ø–∏–Ω–∞—Ç, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã, —Ü—ã–ø–ª–µ–Ω–æ–∫, —Å–ª–∏–≤–æ—á–Ω—ã–π —Å—ã—Ä, –ü–∞—Ä–º–µ–∑–∞–Ω, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–¢–µ—Ö–∞—Å": "335 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ü–∏—Ü—Ü–∞-—Å–æ—É—Å, —Ç–æ–º–∞—Ç—ã, —Å–ª–∞–¥–∫–∏–π –ø–µ—Ä–µ—Ü, –∫—Ä–∞—Å–Ω—ã–π –ª—É–∫, –æ—Å—Ç—Ä—ã–µ –ø–µ—Ä—á–∏–∫–∏ –•–∞–ª–∞–ø–µ–Ω—å–æ, –≥–æ–≤—è–¥–∏–Ω–∞, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–ú–æ—Ä—Å–∫–∞—è": "335 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –°–æ—É—Å '–†–∞–Ω—á', –∫—Ä–∞—Å–Ω—ã–π –ª—É–∫, –º–∞—Å–ª–∏–Ω—ã, '—Å–Ω–µ–∂–Ω—ã–π –∫—Ä–∞–±', –∫—Ä–µ–≤–µ—Ç–∫–∞, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–ß–∏–∑–±—É—Ä–≥–µ—Ä": "335 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –°—ã—Ä–Ω—ã–π —Å–æ—É—Å, —Ç–æ–º–∞—Ç—ã, –∫—Ä–∞—Å–Ω—ã–π –ª—É–∫, –º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –æ–≥—É—Ä—á–∏–∫–∏, –≥–æ–≤—è–¥–∏–Ω–∞, –±–µ–∫–æ–Ω, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞', –∫—É–Ω–∂—É—Ç–Ω—ã–µ –±–æ—Ä—Ç–∏–∫–∏",
    "–ê–ª—å–º–∞": "315 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –ß–µ—Å–Ω–æ—á–Ω—ã–π —Å–æ—É—Å, —Å–æ—É—Å '–ü–∞—Ä–º–µ–¥–∂–∞–Ω–æ', —Ü—ã–ø–ª–µ–Ω–æ–∫, —à–ø–∏–Ω–∞—Ç, —Ü–≤–µ—Ç–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
    "–î—é—à–µ—Å": "315 —Ä—É–±–ª–µ–π\n–°–æ—Å—Ç–∞–≤: –°–ª–∏–≤–æ—á–Ω—ã–π —Å—ã—Ä, –∂–∞—Ä–µ–Ω—ã–π –±–µ–∫–æ–Ω, –≥—Ä—É—à–∞, –º—ë–¥, —Å–æ—É—Å '–†–∞–Ω—á', –∫–æ—Ä–∏—Ü–∞, —Å—ã—Ä '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞'",
}

# --- –°–æ—É—Å—ã ---
sauces = ["üßÄ –°—ã—Ä–Ω—ã–π", "üçñ –ë–∞—Ä–±–µ–∫—é", "ü§î –ß–µ—Å–Ω–æ—á–Ω—ã–π", "ü•´ –ö–µ—Ç—á—É–ø", "üçÆ –ö–∏—Å–ª–æ-—Å–ª–∞–¥–∫–∏–π", "üå≠ –ì–æ—Ä—á–∏—á–Ω—ã–π"]


@dp.message(commands=["start"])
async def start(message: types.Message):
    keyboard = InlineKeyboardMarkup(row_width=2)
    for pizza in pizzas.keys():
        keyboard.add(InlineKeyboardButton(pizza, callback_data=f"pizza_{pizza}"))
    await message.answer("üçï –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–∏—Ü—Ü—ã –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=keyboard)


@dp.callback_query(lambda c: c.data.startswith("pizza_"))
async def choose_pizza(callback: types.CallbackQuery):
    pizza_name = callback.data.replace("pizza_", "")
    description = pizzas[pizza_name]

    # –ø–æ–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∏—Ü—Ü—ã
    await callback.message.answer(
        f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–∏—Ü—Ü—É: *{pizza_name}*\n\n{description}", parse_mode="Markdown"
    )

    # –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–æ—É—Å
    keyboard = InlineKeyboardMarkup(row_width=2)
    for sauce in sauces:
        keyboard.add(InlineKeyboardButton(sauce, callback_data=f"sauce_{sauce}_{pizza_name}"))
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–æ—É—Å –∫ –ø–∏—Ü—Ü–µ:", reply_markup=keyboard)


@dp.callback_query(lambda c: c.data.startswith("sauce_"))
async def choose_sauce(callback: types.CallbackQuery):
    _, sauce, pizza_name = callback.data.split("_", 2)
    keyboard = InlineKeyboardMarkup().add(InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ–Ω—é", callback_data="back_to_menu"))
    await callback.message.answer(
        f"üéâ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!\n\nüçï –ü–∏—Ü—Ü–∞: *{pizza_name}*\nü•´ –°–æ—É—Å: *{sauce}*", 
        parse_mode="Markdown",
        reply_markup=keyboard
    )


@dp.callback_query(lambda c: c.data == "back_to_menu")
async def back_to_menu(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2)
    for pizza in pizzas.keys():
        keyboard.add(InlineKeyboardButton(pizza, callback_data=f"pizza_{pizza}"))
    await callback.message.answer("üçï –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ü—Ü—É:", reply_markup=keyboard)


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
